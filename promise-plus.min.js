function PromiseP(t,o){this.old=t instanceof Promise?t:"function"==typeof t?new Promise(t):Promise.reject(new Error("Promise-Plus : constructor only takes promise or executor")),this.context="object"==typeof o?o:{}}PromiseP.prototype.then=function(t,o){return this.old=this.old.then(t&&t.bind(this.context),o&&o.bind(this.context)),this},PromiseP.prototype["catch"]=function(t){return this.then(null,t)},"undefined"!=typeof module?module.exports=PromiseP:this.PromiseP=PromiseP;
